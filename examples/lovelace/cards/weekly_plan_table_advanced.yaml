# Dependencies: HACS -> config-template-card, html-card. Add resources:
#  /hacsfiles/config-template-card/config-template-card.js
#  /hacsfiles/html-card/html-card.js
type: custom:config-template-card
entities:
  # CHANGE ME: put your real sensor id here
  - sensor.mashov_<studentID>_weekly_plan
card:
  type: custom:html-card
  # CHANGE ME: same id must be set inside ENTITY_ID below
  content: "${(function(){const ENTITY_ID='sensor.mashov_<studentID>_weekly_plan';const s=states[ENTITY_ID];if(!s||!s.attributes){return '<div dir=\"rtl\" style=\"text-align:right;padding:8px;opacity:.8;\">אין נתונים להצגה</div>';}const student=s.attributes.student_name||s.attributes['Student name']||s.attributes.full_name||s.attributes.name||(s.attributes.friendly_name||'').trim()||'שם תלמיד/ה';const items=Array.isArray(s.attributes.Items||s.attributes.items)?(s.attributes.Items||s.attributes.items):[];if(!items.length){return '<div dir=\"rtl\" style=\"text-align:right;padding:8px;opacity:.8;\">אין נתונים להצגה</div>';}const pad=(n)=>String(n).padStart(2,'0');const fmtDDMMYYYY=(d)=>`${pad(d.getDate())}/${pad(d.getMonth()+1)}/${d.getFullYear()}`;const today=new Date();const dow=today.getDay();const start=new Date(today.getFullYear(),today.getMonth(),today.getDate()-dow);const days=[];for(let i=0;i<7;i++){const d=new Date(start);d.setDate(start.getDate()+i);days.push(d);}const dayNames=['ראשון','שני','שלישי','רביעי','חמישי','שישי','שבת'];const grid={};const lessonsSet={};for(const it of items){const dtStr=(it&&it.lesson_date)||'';if(!dtStr)continue;const dt=new Date(dtStr);const inRange=dt>=new Date(days[0].getFullYear(),days[0].getMonth(),days[0].getDate(),0,0,0,0)&&dt<new Date(days[6].getFullYear(),days[6].getMonth(),days[6].getDate(),23,59,59,999);if(!inRange)continue;let di=-1;for(let dIdx=0;dIdx<7;dIdx++){const sameDay=dt.getFullYear()===days[dIdx].getFullYear()&&dt.getMonth()===days[dIdx].getMonth()&&dt.getDate()===days[dIdx].getDate();if(sameDay){di=dIdx;break;}}if(di<0)continue;const lesson=(it.lesson!=null?String(it.lesson):'');const plan=(it.plan!=null?String(it.plan):'');if(!lesson&&!plan)continue;grid[di]=grid[di]||{};grid[di][lesson]=grid[di][lesson]||[];if(plan)grid[di][lesson].push(plan);if(lesson)lessonsSet[lesson]=true;}const lessonKeys=Object.keys(lessonsSet).sort((a,b)=>parseInt(a||'0')-parseInt(b||'0'));if(!lessonKeys.length){return '<div dir=\"rtl\" style=\"text-align:right;padding:8px;opacity:.8;\">אין תכנון לשבוע הנוכחי</div>';}const todayCol=dow;let out='<div dir=\"rtl\" style=\"text-align:right;\">';out+=`<h3 style=\"margin:0 0 8px;font-size:16px;\">תכנית שבועית — ${student}</h3>`;out+='<div style=\"border:1px solid rgba(0,0,0,.08);border-radius:10px;overflow:hidden;\">';out+='<table style=\"width:100%;border-collapse:collapse;direction:rtl;text-align:right;\">';out+='<thead><tr style=\"background:rgba(0,0,0,.03);\">';out+='<th style=\"padding:10px 12px;border-bottom:1px solid rgba(0,0,0,.08);white-space:nowrap;\">שיעור</th>';for(let c=0;c<7;c++){const isToday=(c===todayCol);const label=`<div>${dayNames[c]}<br>${fmtDDMMYYYY(days[c])}</div>`;out+=`<th style=\"padding:10px 12px;border-bottom:1px solid rgba(0,0,0,.08);white-space:nowrap;${isToday?'background:rgba(255,235,59,.25);':''}\">${label}</th>`;}out+='</tr></thead>';out+='<tbody>';for(const les of lessonKeys){out+='<tr style=\"border-bottom:1px solid rgba(0,0,0,.06);\">';out+=`<td style=\"padding:10px 12px;font-weight:600;vert_]()
